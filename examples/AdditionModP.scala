package joygp.examples

import joygp.*
import Evolver.*
import JoyBool.*
import cats.effect._
import cats.effect.syntax.all._
//import cats.implicits._
import cats.syntax.all._

import scodec.bits._

import spire.math._
import spire.implicits._

object AdditionModP extends IOApp.Simple:
  val thePrime: Int = 31

  case class TestCase(initialState: ProgramState, expectedFinalState: ProgramState)

  val example = TestCase(
    initialState = ProgramState().copy(input = BitVector.fromInt(18) ++ BitVector.fromInt(19)),
    expectedFinalState = ProgramState().copy(output = BitVector.fromInt((18 + 19) % thePrime))
  )
  
  def generateTestCases(n: Int): IO[List[TestCase]] = List.range(0,n).traverse{
    i => for {
      rand <- randomIO
      lhs <- rand.betweenInt(0,thePrime)
      rhs <- rand.betweenInt(0,thePrime)
      result = (lhs + rhs) % thePrime
      // encode the above inputs into the initial state input bitvector
      initialState <- IO(ProgramState().copy(input = BitVector.fromInt(lhs) ++ BitVector.fromInt(rhs)))
      expectedState <- IO(ProgramState().copy(output = BitVector.fromInt(result)))
    } yield TestCase(initialState,expectedState)
  }

  /** number of test cases to create for each individual assessment */
  val numTestCases: Int = 10

  val fitness: Program => IO[Double] = candidate => {
    generateTestCases(numTestCases).flatMap{
      tests => tests.parTraverse{
        test => candidate(test.initialState).flatMap{
          candidateFinalState =>
            IO(score(test.expectedFinalState,candidateFinalState))
        }
      }
    }.map(_.sum)
  }

  // where we actually calculate the "score"
  def score(expected: ProgramState, candidate: ProgramState): Double = {
    val execStackSizeDiff = math.abs(expected.exec.size - candidate.exec.size).toDouble
    val inputStackSizeDiff = math.abs(expected.input.size - candidate.input.size).toDouble
    // if there are input bits which have not yet been read, we heavily penalize any output bits
    val outputSizeDiff =  if(inputStackSizeDiff > 0)
                            Int.MaxValue - 1
                          else 
                            math.abs(expected.output.size - candidate.output.size)
    val outputValueDiff = if(outputSizeDiff == 0)
                              UInt(expected.output.xor(candidate.output).toInt())
                          else
                              UInt.MaxValue - UInt(1)
    List(
      math.log(Int.MaxValue.toDouble - execStackSizeDiff),
      math.log(Int.MaxValue.toDouble - inputStackSizeDiff),
      math.log(Int.MaxValue.toDouble - outputSizeDiff).ensuring(_ >= 0),
      math.log((UInt.MaxValue - outputValueDiff).toDouble).ensuring(_ >= 0) // if output size not same, this component is zero
    ).sum
  }.ensuring(_ > 0)

  val maxPossibleScore:Double = score(example.expectedFinalState,example.expectedFinalState)*numTestCases

  val randomIO: IO[std.Random[IO]] = std.Random.scalaUtilRandom

  val bestYet = IO(
    //"a417dff54941f9d9d62b4d7f5ce63f8672b5cf9acf3c68ccecd76cd9af6bbdedea8f4639fa4b60cd5dda9a7d988647b5b7e407a42f275cc35dda5a2eba77e2b3089c70cbc1ca50edc25bee3b935dd534c74eb0af282436bc502528ea67f377cce35fdb5922ba6c81e4ef9d56ba1eb04f7025a5d2c9099cffead9018bdc9e7b821fdb360d3d85c15b476815bc66497ae33bf50f68a5de89e1c196e5f2d6b706a5f5074eb964fd390b6ca1df89a0c706a6ba92bd0767e5454e9164537d50219a4d177fa6b28aaec983da00a5fb970179ed327deccee8612c6481f7cc9edbfc9f65a194de4bc70d4d3e4fb84e498e6b0bff33fa284ce346582e28b9314afd71813d6283b8b59a4ab641d03e6b129ab35930b84bd07c2f35e13a1bbd500c31c73d07365838bcf68fe28f98eb1bd2cd669d217a3d7589fd78bd148c33d13d073c58a8b4feb9a09eff4ef155dc27ad0966b34898f44a9a51de6ccf1e0e0afa8a871f6ed85a7f68d425f484eda166b31eb03c3e3f79ae4143e2916188897f3aeb3d53097327ab79f6686a4a4bd5a32b42f933fa2848eb46582c3afe714bbd31831eaab6b4279a6bb602c4aa6b52ba277830ba6bd27a0f752038593dd40411e6bd873e78b8b4fd5bc7a30742da5fac535a1fc99dd042431b32c0e1c5c38b5eed8c18fb5597a13cd6789cb42cd663b61587c5ffb4c82078d12c30122fe7d567b9edaf64f5757edc1d4869feb02d285d247f440b2578cb0487570e297fb63063e552d684f35bc7e85a074d6847566f06170d7a4f43ecb42313339a80823ec7a0f7ca17149f2bfcf468aa4b0f658a6f42b931ba28480346180c38b8614be5b0801f6e86b60fb2cf2642d03a6b50bab11e3098ebd27a0f2529187170e297fb62063edd2d6c4f379e4c95a074dee57566f06070d7a4e41e4a4270337aa80823cc7a0e58b17169fd38d278b61480f25ab5f58bc9a5a35693c179ad09d8cdeaa0308f31ea31f0c5c5a7d4dd0479c65ad0162334e10d40eb2c4fe2c5e2a471afa9e879a2c586a7f74f1575eb6bae7ae03d644b35932c85a064d6a5f36650737057c4d428f37ec2d3facfa75ea0276d2b769aed15e1f5fbedb3c81f340b08459af9df59aa7b4bf9354f41a7075a5a5fcbd31c3de3f31dfd63ffd3e86f8a3e215d284b158b5c052076d5a6b16070797ac7c4541c51606251bbf7a33fed17953e60b6b42d9ac43643d038eb53f93b7018303fe03a1c7ca161e97dd255bf1075b687f3dc6c82f2baf5ae99853d9a8b468a75f8bf34f13da5bc9ee7c37906a909e6a0eda697e4742df7017364b90cd764210f9bd8bb84b5812cd669b317a1d35b9fc38ba1c1e11f12d473c50b8b6fef5c08f7f6d7505dc25bd0d66b34d00f11c9ad7fee9cf0e2e1a729a871e0ac95e7d7cb6e4d004ed2162a515b8bc0ead3dae6803c7a1f0a895752ac8344f287f27abd8d768e8434bf85a6185f95b759fa64c5afb09f1539c20a50b62b74308200e9a84f62cfe0f061070cec3de24de583f7ef0e33f86faa72e33d6858318b6c85a074d6e5f16634438f5dc3f9dfc9ae7b69e9374f863005425a5dc18b052fe8fb5ffa02f2f9e259aec8581f9e9fd73e8de6c233645a1deb5048c8ca6411aa9e2d2e8ff95b8d8a531f7497b6359ac73642743b6a53ecbf71e85439c17a097c3151f1f9f1711771139787924c76341af866abf3fba6a23ee0272f8b0499ecc5e475cbfc3b483f24429d748af9de4baa1b07ec3ddfeeb21752537f69fb0d2fc0fb1fee03b4c97219aec8721f1e8bd7fbcd63c2f362780fc9649c60c2e409ae9e2c3e0ce4aeb6a7b592e86b5faa559508a8e1d"
    //"a417dfe5e941f9f9d62b4d7f5c763f0472b5cf9acf3c68ccecd76cd9af6bbdedea8f4638fe4b60cd5dda9a7d988647b5b7e407a42f275cc35dda5a2eba7762f3089c70cbc1ca50ed825bee3b935ddf36474eb0af280436bc542520ea67f3774ce35fdb4922ba6481e4cfbd563a9ab04ff225a5d2c9099cffead901cbfc9e7b821fdb360d3d85c15b47e81dbc66497a633be50f68a5da89e1c196e5f3d23306a57943da2976a2787065b97cb5adc1a97d41d3a6593f4e429b2877e06871c1a8aea4af41d9f95153a45914df5604669345dfe9aca6afb260f680297ef5c45f5b4c9f7b333a184b19307d7323b6ff679968653792f1c3534f93ee139262dac2ffccfe8a1338d1960b8a2e4c73bf5c604e58a0ef2d6692bd90740e9ac4a6acd64c2e12f01d0bcd784e96ef54030c71cf41c5960a2f1da2f0a3663ac6f4bb59a7485e8f5d627f5e2f45230cf44f41cb962a2d3faf6827bbd3bc5577096b4259acd2263d32a694779b33c78380bea291c7dab6169fda35097d213b6859acc7ac070b87de6b9050f8a4586222dfcebac754c25cc9eade7d9a1a9292f568cad0be44fe8a123ad1960b0ebf9c52ef6e60c7aaadad09e69aeda0b12a9ad6ae89da0c2e9af49e83dd484e164f75010479af61cfbe2e2d3e1670e8c1d0b697cb14d287f267741090c2ccb5387170e2d7bf63063ed565e84f359ea7290b3599ed8561f17fed32081e344b0c048bf9f559ee7b6bd93d5d5fb707521a7fac0b4a17491fd302c95e3ac100d5c38a5eed0c08fd54b5a13cd6f1fa9681d31a11d59bc187c37e93d0f32d40c44ce6a0208fb1ec3dd285c527caff3d1a2892c1d9668bd0ae4c6e8a1200d186030e2e1850f96c2047dba1ad83eca3c990b50e9ad42eac4f8c263af49e83e94a461c5c38b5f6d889cfb74b5b17cde79305681d37b95d59bc181c35e9390793929c0cdeaa0208f21e83862c1c187f4e349e2d85213cb62d7d22f26960d4a4f05e6b8076337aa80c22cc7a8cfc317149f537411e7596b40588cd384350bacb12f8b178a91c6bea7a1e68b141a9fdd1c55dfadaebbeb8075902cde0e321600935a954d9901ed415f1254a3ddf98b4feb3edd7a809cf4adca6b941787d7efb6df207cd02c21166be76d67e9ed2fe4453d029c1d69697f2f4c70f78bccf7f58fff4fa1be28f88574a12c562d7014a1db569bd5c1c1e5ef1f11507145898946efde8cfbb45e54f9a2dad0b66b10d10f50ebad4fe4edc060c0f982e871f28587a5f74856fc51d6da1fcf71b20bccebd6ba6614f66a2d1a29d7e2fcd3c4f6b6f27b9f0de41aa4279a03b6905f91c0b7dc05cd92e4335f90843e6f62ee12d604b319a6cc5e874d267f0e2a8707843d4b51cf142e2dbfbf5021dfdb5d4177096f4359acd3403c4766b5efba73c38b869ca6a1c782b6579f5f2da934013b4858a9456e3f03ab4f6b9a00f1e87c2a35fb45f54f982dad0b66911590f40ebad4fe4acc0e0c0ff90ec71f28585a5f70956fc0156d81fcf71b20baaebd6ba6614f66a251a29f7e27cd3c4f696f27bbf4de01aa4a79a83b69a5f91d0b7dc05cd92e4335f90843e6f62ee72d604b359a6cc5e874d6e7f0e2e8707947c4b51cf14282dbfbd7023dfdb5f4177096f4359acd3403c4706b5ffba73c10b809ca6a1d782b2579f5f2d3934013b4858a9456e2f03bb4f6b9a00f1e87c2a255d0ab20d13ca1fc9eafe359a3a10d2fe1698617e56dd67e9131ebec27c54e70200e9a84f62cdf0f061070cec3de24de583f7ef0e33f86faa72e11d6858318b6c85a074d665f16634c38f5dc3f95fc1ae7b69e9374f863005425255c189052fe8bb5ffa02f2f9a279aee8588d9e9fd73ecde6c233645a1deb5008c8ca6411aa9e2d268ff95b9d8a531f7497b6359ac33642743b4a53ccbf71e85439c1da093c3153f1f8f1711771139f879a4c76241af866abf27ba6a23ee0272f8b0499ecc5e475cefc3b483f24429d748af9fe4baa1b07ec3ddfeeb21752537f29fb0d6fc0fb1fee0bb4c97a19acc8721b1e8bb7fbdd61c2f362780bc9649c60c2e409aebe2c3c0ce4aeb6a7b492e8695faa559508a8e1d"
    //"2f3584af0fab9ef04497de6ee5fa3b50b0255719b38824d9e0f28355c6bef01684b967d789d8b1e8d0616b9d107db4eadc371063e20af64a31b4d025e3929fd9ff5b5bb1242e1c8c201dbc94cb99c97ab207cbc97dedb40957431784672ec30b26644f5b592d7fad78e1f719d7bbfe5045acc827b701fff6efacdd1167921efd22ff376cd060f0bc48b6ed064284e0fb729fed3ad3ddf1067121ffe32fd1664d17302bea1a8ec791686a4fe166b3aba4fd51cf9caa715ba9f48276c7bf7b75febb53fd95716fa1758ea10afce9ef62bb834c7d32965f8793835b754d3b6738f7d8868e79e8eade43bbfa807dcb5cb79d46f3a53f7edda6bbb20860419fe2731338d78ed71047cd3f0e721f5fd48b6afa6af741bac750a5bcf8f9b15f49a73f194b3b40cbc3adfa271d338d7a6c40053cd0706f21f9fc48b0ed2e53caa3fad09fff2ed35ef8543861efd139c9bca797738cb9a28f83290fafeac5b52c329ee50f9f86f7f9779aefc4a9070f409d77389a53f994b3f42cbc3adfa2715328cfa6c40053cd1f06f21fdfd48b4ef2e53caa3fad09fbf2ed35ef8543861efd13949bc2757738cb9a60f83290fafeac5b52c33dec50f9e86bff9779aefc4a9670f429d773f9af8388a3f58dc597a9e0e8d6dd731e99c239f620838e78783390eefea05f761729fe51edd8cfde8749aeec8a1f30f7e89cc0ce73eab34404f34fcb9c8793f172dab69aacd42eb19431733f3eec57d269c7e2d24fc0fa726b7e89c748e21fbf10014f343c19c85f7f522d3bcb94e2b8fef423ef8bb4d7fe150e187bf44e62671975dca20868a3e0cec7eb7ab1655b0ef7b942e7a12f7e59e6bbf5aa50479827d5eee6bf0e6a5f323719a733fab599c6cde64149be129f335af1135dfa72af3592f623f16225733521e959c97f7f522fbb4b94f338bfd423efcbb4d7ba552df337270135dea75af1592b623f17025732563e959c87f7f522dbb4bd4f7a8bef423ef0b6597fe452e1a6bf44e626799f59c820a39a765ca47eafaf16d5b0cf6b953e6a16ffe5566bbf50870c3dca75dece6bece229fc637192423f2b1c940cde74349be1ae67b43d2b390fefea45f769729e6717fa847df9769af70aa5be62e5e026bbd6eb526b256c47e2e042e6cac7d2b390fefee45b76b7abee517de847de16eb2ffc9a5cb4f7e89cc4cf33e1390414734ecb9c87c5f5e2deb419af72a1cd425ffcaacd77ea10e17d5f5e2dab419ef72a34d42dffcaacd77ea10e187b94ebb9dcd7c9c453fac6e324847e56392819bce86937c213a67b7e026bf94e15f2b21e817e0e05fe66add735af0135dea70ae1592f60bf0302dfb3561ed69e8178f0e7220519e55882214f7744bae444934fab7355bf2ed6f664a8bd0f2d24b5e8b4444e03c2b10d469e4ac9fdea4a3b8e13e4affc0b2785477bf3b64f957f1b1ab82f984baf4b4b0bb9fb2d11138cf6ac4193a3b2b27c7ab24d8404b92ade90cae551da7ce997b55fc2efee4b8cac9e1efc937145b2ca7fc030fb5678cf3647cc57b7b37b9227953cc7120cfa09cbd7d7ce98d"
    // "af358ca34f2a9ef044afdc6ee7f8328e2df02eb1c4a15d997dec77506b8fa652dbf8f0606b4eaba16ee71bb300d9cf3d1f5b81777f500fb94b96f7aa9a74a5ef5fa5777e410d08337c0a7e665af9d2e20cd9a7c1ee47e2fa997fdf4d5ef83358ea34f78f1f362be93cc7d12b6468393875bb84e32671ae4dc800ac9a0e1ce47f3f89161fadca58d47f5e03fde5dacbcf0ac61c28fa07393394f2ec7197b551f16561f57d48f6878e535c31fb71deed2ed35df08520e878138ec712427f32167c9597835be54e2a651174d8180a708720de47fbfb9129fe5ca79556f4a13f7f5da6bcf0a870c3dfa27393784eace79933583f06520d5fd58f6258e7bd8a9f2d0d7ff3ed75df81524e1f9c3ace7f35f0d9167ef4b8b2f5351d1adbbe73d338473ec41061af0f003a9ddfd50beac2e53fca3cbb19f9f0e935fd9141f61a7d13de19ced546e9909a69fb23d0f27e2efb96d3751e89d472882c67e7d48afac578fc5a51f85e454b6dd13ba91c40e7e222e9e4d6ce2173e100d4f34745dc85b7f722f2bcbb4e2bf643fbfe9129fe5ab79547f7a13f3e55e6bf76b870c1dea85623f3a5d26fbb2083cc34d625bc3395ea8dd10034d3f6e7a1e4fc5d762da6ab390bac659c5ccbcf8915f48ef1d8b483f0bc8a16dba273527885cfc4435ba3f3a5d26bbb2083cc34d627bc3395ea8dd10034d3f6e7a1e4fc5d762da6ab390bac659c5ccbef8915f48ef1d8b483f0bc8a96dba253527885cfc44353c9a99c42e5e203a9e69e9bb90befce45a5797eb457ecaff7dd32d3fcb16f2a8f6b427edcbb4d7de970c987bf54e566f09d5cce1a66303e8cb5be3fbb12d4b3cf7b151e6b1affe5946b2f12e594bf8a7d9cfa6be0f23279613864a8783a48f97f72257fcb9472a8d69426e7ebb4d7f61506187bd44e53cf09d59ce3266b82704203ebfab1ed4b1df7b1c76580affe5ce6bbf12a59c3f1875dcfc43e2e328b9e17165eb6a3a35b71ce7a6248e7d8820619e1e0ef03bbfa997dda5ca7e147d7633f3a1ca7bbb0283c434fa2430379c7aed930030d1f6e7e0e4fc5d66ada6bb350b0d751c4e5fcfa115f49af6b8f492f03e889e99b271523887cfc00153c91d047217dfd88a4af22529aff98feffbc5b7d962ce551fc680fde9749af7e2a1430d7c98f7e2a1530d7ea9cacde03bbb9c75cd707d19487f3b543c296396f42a3cf635ef4bacc55e274b307f1debb9fcd7c1c461f2d6eaeb757074e34eb98f5dc11e7b1041c7383c19cc767f402f330b92fa28f4ec66e703b4d7f4250f8a6bd44e606739f571868469a7edcec149f8b9e55b4c566e3f58ca583997975ecfc134e3b71ce5af729e7d8930a3bf1e0ce553bfa817dd95c87f146f3673f3a1d26bbb2287ec35a227b0339cfeacd30124f7f7e72de0fc5cb6ada6ab170a43525b97fefe845f761729e67377a843df9769af74ae5be66e4e426bbd6e95ea7254de7e2e00aee4a87f27394fffca45b5687a9ef517d6847ce1ed22e7c8a5e70d3e99cc0ff336339049473cecf948dd9f56adab659af7aa74f42dffda2cd73ee10e187b94fbb5bcd7db8553d887e324c4eed7390c38bcd86937c35dcf707ad6f21ffb441bcac2e13cd62ef528fbf2ed35ae17da7ce7cfc04553af5624964ac9afc740c58f918fa1e701fdbdc4b6edef57dca3fbf00fb82cd59fd934b969efc139e9976742520928a6bd97391f8b6fc59d68235ee56b9a84bffd5d9aefc421cafa9cb45952822fe65469e85bf59d59aeff4e1c317f28d773398fdb88a7f589f44d04f4ac705433b9e0f2ff846744f6fc0d57f29f20e1643d0afc0983fc0d5faeeb5e2a699d0c15c2b65ec17f8605be6f8c1c213d02f3e1cee40a134ab304429eee8d65c9c9269d5e666b72d9ade8c15172165e415fd1a8091c0787c21ac93c95937bc684771ca7995ffa56c72a88f7e76c9faafe3637305f30d75e96941733f35a22275dad598327066564f8e5649b08297245b046f22698a2413f4b397af8f5d33a"
    /*866.4339756528998 / 866.4339756836335*/ //"af358ca34f2a9ef264afdc6ee7f8328e2df02e31c4a15d91ffe477506a8fa652dbf8f0606b4eaaa12ee71b1300dbcf3d1f5b81777f5007bb6b96ffaa9a74adef5fad7772410d08137c0a3e665af9d2e20cd9a781ee47e2fe987fdf4d5ee83358a82cf68f1f762bc93cc7d12b6468291875bb84e32671ae4cc800ac9a2e1ce47f1d89161fadca78d47f5e03bde5dacbcf0ac61c38d287793394f2ec71d7a451f1e561746d48f6868e535c31fb71deec0ad35df085206878138ac712427f32167c9597835be55e2ae51374d8180a718720de47fbf99129fe5ce79554f4a53fff5da6bcf0e070c3dfa27393784eaee79933183f0e760d5fd58f6258e7bd9a9f2d0d7ff3ed75de91524a1f9c3ace7e35f0d9167ef4fab2f5351d1adafe73d33d472ec41065af0f007a9dffd50bea42e53fca3cbb39f9f0e935dd9141f41afd13de194efd06c9d09a69fb23d0f27e2efb96d9751e81c472882c67e7d40afad77afc5a51f85e654b6dd13ba91c40e7e222e8e4d6ce2173f100d4f30545dc85b7f22af2bcbb4a2bf643fbfe9129fe5ab79d4777213f2e55e6bf76b871c1d6a8567a8e5d8820c35e1c00f53bffaa17d585ca7f94797673f3e1d26bbb2283e835fa27bc3b9dfa8ddba134d3f647a1e4fe5df72da2ea3d03a8e51058cfcfa915f5aef1f8b4a3f0bcc896fba277523881cfc445d1c9ad9c42e7e201a9e60a8bb90b6fee55e579768c57ec87f7fd2253fcb56f3a8eee427e5cabcd7eed70e383ad50ac47e74fa41f5645179869ac4b786723d53ba2006987edcf4bd9b8b8ec5b4d56721748cb38b99397122be99de3b06007e16914adb744e6a4f10b9f80863747a70aa4d77641079869ac4f7c2f2bd113a28269a7edcf43c9f8baec584d46721558cb38b997df322be91de3b16907e151552d3744a6a4f10b9f888687935b3885cbc00752cd35377317db9c8b4af2fd68add95bedaa65a7f972de5516d604fdb9f69afbd2e1b30f7ea9cacde138b99c34cc607d197ff2e51c2a35a509b9faed35ec8141861cf11394f3c075e738c998e09c0080faf6ac7b52c77dec7959606bff9719aefc4a9670fc71d7f7f10f8b8ca2c597c197ada8f0d658739e9892b9f620810668793ac0eefea25f769769fa45d5f8cfdec729eeec080f50d3e890c0de73abb60e02c347db9fa393f5759af69aecc42c39d471317f3cc447d26bdae3d24bc0fa227a62c9854ae21f3f00054e247411ca5e7f662903e894a6afe63fbfef17df658b39547f1a03f7a5d27fdf8a850c35f263dfce854c35faa70b3780eeee73d735c0f46521fced50f0a58c5bf0a8f3d8d3bd2eb305789d2c81fc778ee6f25f051187cb5babecd5c0d38d7afe3d770c69ec41071ce0f06731d9fd00bc8c2e4be8a3d1b19f9c2ed35f909d3e29af5139819ce7d5c61a95ae9bb7330527e2e7956d3959b8fd633960e65e5d7b3f04d38edc7794bdea79f624c28efc7833954efea05f725721ec51acd9c5ce87c9aeec8a1fb0d6889ec0ce73fab3490493dfdf9cb783f172dab69aac5c290d596e5ffbfb117d9a5ca799cddaa10f7e5da6b5d2bb6f99b93909aef5ba57a9c9537ce8b802bb90b1fc9ced3f7b2916f5a1ea73dc7b5811d385948b1f22979c34fa67303fccd8c649251cf38015cc850fe4e769fbd940b6ad0f535ee3ead08f9c3da45cf914bce1a7d33981fe66c4320928e79d9e2919b3eaddb575b35ee54e0a85bffbc59ac7dc21db0f709f76b79adb702e7912fd64989ddae7218717db4d247863b9ee0f5ac643ff68b779585c27dac7dea51f7e5da6b5c2db4d9cfbf808aa752ac492c9593578e818f1f2b5d43ce07fbdba96ddbdeafbb46f7e21f7259ab3fb24962d35f8073d32ece84a412514d7b2c723f16db8b3ad256bdcad735097ffabe35dd884395f53968b2a54c5fcca8d3d417eb3abb5dfe9c3862fed1aee6731fb7114fea33e89a09e958e0a8657181e5ff08ce89ede818aff53641c2c87a1cf81307f81ab564d5e3a06387c8c7d0f300fedeea5b76e7abee51fdf007dc166acfec925cb4f7e094f4cb3ba1290494535ecb8c8fc5b762ceb411af72b5cd4a1ffeafcd77e210e5794e5a2ca95117732a34f42dfaceaef77fa70e1cbe946bb99c87edc443fbc4fa26a27a56382a19dce0797fc233a27b7e06abf97d9070b21e857e04c5fe06afd775af1534ce848ae1db2f60bfc322df37c60e109e8159f067728d09a55980214f5746b2e0e4934eaf3135b96cd6b460a8b90b2f60afe8d4048e03c3e10d649a4ac9bde3421b8e53ccabfc2b6395447bf3b60bd57f1b1b982f9849af494a0b8b79ed1193aed6acc1938332b07c72b24d8414b92ad82359134c51209f859cbd7c7af99d0"
    /* 866.4339756624458 */ //"c2275cd792f4c19f810fc68d52242d1cf730c7d9d67410fff0c1f5a28058aa3a1acc08b7ac738d6cf83add22c7fd0c634c70113f7539deeaab89f6a12efd388c910d794389042e098446bad7106709947f9b3d1cf42f6756c893fd752344f163fc10c7555765c388112d8294823da8806535d6ee92b902d87fb6a99cec24baa3ad67eaa7775522a1a0632ff5c56a79ab74e50a025954296ca49d8512c18252ca14976da00a14d36746406b0b0155fb8e27c88ce0ff22cb1f390c4d33d2bfd2b61594764d60cbeccfeee086069f2270544ae394de535cc70ae3823406ca92ef3a927364d42a3bbd5a3a33e4dc0ec63afd1fa8d833918661d00b0b614e52cdce7f0a8cc6b3dd35052d5f2d5fa4299a54add1f53d0a76f98389f740d335a8294a096010eb86b6efd7d16018029667a4497020ffc76ae1e941aeffa9a87ac250d6cd698d7d71c984bcc463decc6c90233cc239cfdd2a1479d82b72d66a33a35dd608208430b457db9439a4914ff02da539cfb13bacaab29f4f355600b56eb77c9ab66922a547d06539cb6c5883dd070edb60bd202d1463ae12cb3fde45833212510616324ca2d72cfbb7e766b33ea5b7e30b075f75af35c7878f3e7bd28f7b3970749ee318af35776855a76469cbc9a4fe0c7f7800cfd3c78ded5c896b00e438e3198beed987b782b87a0f020d58e57fa3f51f067a30cc3a0141682ef44b580721c718cc5f764c3d3415c3d038106ac76bfd1fa8f833d18661d00a0b634e53ccce7f0a8cc6b3dd35012d5f2d5fa42d9250add5f51d0a76f983c9f740d335a82bca0be010cb86b6efd7d16058028647a4097020fdc72ae1e941aeefe9a838c250d7cd698d7d65c984bcc463deee7c98252cc279cfdd2a1478582b72d66b33a35dd608108430b457db963da4914f702da539dfb13bacaab2990f755400b57eb77e98a66962b547d86539cb6c1883dd030ecba0ad202d14428e12df3fff45833202510716304ca2d7acfbb7e766b33e85b7e30b075f35af35d7878f3e7bd38d7b3971749ee31cef3d776855a74469cbc9a4fe0c7f7800c7d3c789eddc896300ecf8a31d8b66c987b492b87a0f0a0d7da9f3ca7334f622f2126c9e9c37717581fcce28e6c43bed15ee44c6cf89503950817784f9844a3fea4a221ef77bf46939e690df5fee50a2eec0d586b35dd51aeef40105978c13fbbb11f6017819c6b917d5325f6d4554f8665418f352c69ed2652e45f661f92d344302cb85f58c51ed9867da0b90814d9e9ea01e2305af29f30810bfc496de1e072d0eeb79fea89217249a63ccfc6b33062de64683048d3b100bdbe05cb76063de5eb50bd67ed96b4a43678630b71d2366b1e66a6f5ce594895fd463537b482cf22675badfaa2e2a713b2c4a42ed1733a34cfe679e7ef4ea0fcc8183239bd7c85bbedab35c933537fe6cc8cd2ff039adaefd0478133399a9dd13151b1d9460b9951ae3f324f3f7ed52ff640c190ddebc42ddf4d59ac59939ffd32646687f21cd6d77682348999cea4ee880a9dcecb201d83378ca0d31fcbaf9fb3e3fa318d451f91ff1eae14cebb290ff6b867dd2cd6d54c79aaa93573d8a97ce0c652472c4e1e822f4b533b365a88549036350a38fd0d6d99359fd51c6300788bfeb55999e8fdda0e1cc244ef33d39d59a4f075ac9a9debd04499e75cf3fe99673a2fd0c196240fe13a070f4d48ba99b22e7744c54ef765900e41a0e654618fe4d74fdbc9fd9986a11d9cff8b530b675dd487bb5c32ee922a6aa6acd5549b38ec4c0e706329aa96379f411f67b89f932d643a485d1ac51c7ea6b6e89acfea8e5af77897bca7057c78ec21d56dbb45d21dabcfe2db1e01bdb5d8fb7cb8e92f3490b4eb09083f94f530eaddd038ece40dd57a58c5724dfa5b59be06f5411ea83b80300439ed27caecd7df287eb0a9d21f8501c410e7dbc1be4c23a4b71a743b8177302041a73184614530efe75773b44bc9933322755755cbd5a914e18646e679ccf64803e002dd79ad3dc61ecd0a304a9a4624b8d464ba448c3fabe8523a40fe72eb30080f3eac240f65e0ffa94810286ed7e53cd31565730689d12e2bd8be04106ee24805a8d59231a7306a330943f74e1d78ae64043275e6b09d88a43f7daae46fa9793246344ea2edb95ab5229c30c998cf093e8912fc005aa705a7b043fe87c6c94348cebf980c9748948ff56fca434a2ecc046e0003efd584b16f4d1efd09031709ca7cc78948e4ae60e1b85dc5fe5148269dd96104d502724e44e6554e44286eeeb39037d6c20244e1c75709799542dc0914ebf93abe575c25f18344a14eb415abbe402f6650226516b3b5747037d9dcf7cd17a9a2668a82d41508208452043cfcb49fa18959a40bf2438d1a7af0632d02f2a17f751cea103671c3897729e6e2abf8ef06e6294d8f167b2dbc571f8c63a555caa1e6a5a5797921af01027105b01eb74f650d0ac48e32e673a55979750b31c9900227b8a6185761fe04325197808fac261cf681fd71854d3640ed19987b683d474"
    /* 866.4339756384643 */ //"c2275cd792f4c19f810fc68d52242d5cf731c7d9d674107ff041f5a28058aa3a1acc08b7ac738d6cf83afd22c7fd0c634c70113f7539deeaab89f6a12efd388c910d794389042e098446bad7106709947f9b3d1cf42f6756c893fd752344f167fc10c75557e5c388112d8294823de8806535d6ee92b902d87fb62b9cec24baa3ad67faa77755a2a1a0632ff5c56a79ab64e50a025954296ca49d8512c18252ca14976da00a14d36746406b0b0155fb8e27c88ce0ff22cb1f398c4d33d2bfd2b61594764d60cbeccfeee086069f2270544ae394de535cc70ae3823406ca92bf3a927364d42a3bbd5a3a33e4dc0ece3af51fb8d833918661d00b0b614a52cdce7f0a8cc6b3dd35052d5f2d5fa4299a54adc1f53d0a76f98389f740d325a8294a096010eb86b6efd7d16018029667a5497020ffc76aa1e941aeffa9a87ac250d6cd698d7d71c984bcc463de8c2c90233cc239cfdd2a1479d82b72d66a33a35dd608208430b4575b9038a49d4ff02da539cfb13bacaab29f4f355600b56eb77c9ab66922a547d06531cb6c5883dd070edb60bd202d1423ae92cb3fde45833212510616324ca2d72cfbb7e766b3bea5b7e30b075f75af35c7878f3e7bd28f7b3970749ee318af35776855a76469cbc9a4fe0c7f7800cfd3c78ded5c896b00e438e3198beed987bf82b87a0f020d58e57fa3f51f067a10cc3a0141682ef64b580721c718cc5f764c3d3415c3d038106ac76bfd1fa8f833d18661d00a0b634e53ccce7f0a8cc6b3dd35012d5f2d5fa42d9250add5f51d0a76f983c9f740d335a82bca0b6010cb86b6efd7d16058028647a4097020fdd72ae1e949aeefe9a838c250f7cd698d7d65c984bdc463deee7c98252cc279cfdd2a14785a2b72d66b33835d5608108430b457db963da4d14f702da539dfb11bacaab2991f745400b57eb77e98a66962b547d86539cb6c1883dd030ecba0ad262d14428e12df3fff45813202510716104ca2d7acfbb7e766b33e85a7e20b075f35ef35d7878f7e7bd78d7b3971749ee31cef3d776855a74469cbc9a4fe0c7f7800c5d3c789eddc896300ecf8a31d8b66c987b492b87a8f0a0d7da9f3ca7334f622f2526c9e9c37717581fcce28e6c43bed15ee04c6cf99503950917785f9854a3fea4a221e777bf46979e690df5fae51a2eee0d586b35dd53aeef40105978c13fbbb11f6057819c6b917d5325f6d4554f8665418f342c69ed2642e45f661f92d354302cb85f58c51e59867da0b90814d9e9ea01e2305af29f30810bfc496de1e072d0eeb79fea89217249a63ccdc6b3306ade64683048d2b100bdbe05cb76063de5eb50bd67ed96b7a43678630b71d2366b1e6626f5ce59c895fd463537b482cf22675badf2a2e2a713b2c4a42ed1333a34cfe679e7ef4ea0fcc8183239bd7c85bbedab31c933537fe6cc8cd2ff039adaefd0458133399a9dd13151b1d9460b9951ae3e324f3f7ed72ff640c190ddebc42ddf4d59ac59939ffd32646685f21cd6d77682348999cea4ae880a9dce4b201d83378ca0d31fcbaf9ff3e3fa318d451f91ff1eae14cebb290ff6b867dd0cd6d54c79aaa93573d8a97ce0c652472c5e1e822f4b533b165a98549036350a38fd0d6d99359fd51c6340788bfeb55999e8fdda0e14c244ef33d39d5ba4f075ac9a9debd04499c75cf3fe99673a2fd0c196240fc13a070f4d4cba99b22e7744c54ef765900e4120e654618fe4d74fdbc9fd9986a11d9cff8b530b675dd487bb5c32ee922aeaa6acd5549b38ec4c0e706329aa96379f411f67b89f932d6c3a485d1ac50c7ea6b6e89acfea8e5af77897bca7057c78ec21d56dbb45d21dabcfe2db1e01bdb558fb7db8e92f3490b4eb09083f94f530eaddd038ece40dd57a58c5724dfa5b59be86f5411ea83b80300439ed278aecd7df287eb0a9d21f8501c410e7dbc1be4c23a4b71a743b8177302041a73184614530efe75773b44bc9933322755755dbd5a914e18646e679ccf74803e002dd79ad3dc61ecd4a304a9a4624bbd464ba448c3febe8523a40fe72eb30080e3eac240f65e0ffa94810286ed7e53cd30565730689d12e2bd8be04106ee24905a8d582b1a7306a330943f74e1d78ae64043275e6b09d88a43f7daae46fa9793246344ea2edb95ab5229c30c998cf097e8912fc005aa705a7b043fe87c6c90348ceff980c9748948ff56fca434a2ecc044e0003efd584b16f4d1efd09035709ca7cc78948e4ae40e1b85dc5fe5148269dd96104d502724e44e6554e44206eaeb39035d6d20244e1c75709799542dc0914ebf93abe575c25f18244a14eb415abbe402f6650226516b3b5747037d9dcf7cd17a9a2668a82d41508208452043cfcb49fa18959a40bf2438d1a7af0632d02f2a17f751cea103670c3897729e6e2abf8ef06e6294d8f167b2dbc571f8ee3a555ca81e6a5a5797921af01027105b01eb74f650d0a849e32ee73a55979750b31c9900227b8a6185761fe04325197808fac261cf681fd71854d3640ed19987b683d474"
    /* 866.4339756445179 */ //"c2275cd7d2f4c39f810fc68d52242d5cf73187e9d674107ff041f5a29058ae3a1acc08b7ac738d6cf81afd22c7fd0c624c30113f7539deeaabc9fea12e7db8ac910c794389246e098446bad710670d94ff9b1d10f4276756c813a5752344f167bc13c75157e5c388912d82d4923df8806535d6ee923902d87fb63b9cec44baa1ed67faa7775522a1e0630ff5c56a79ab61e40a425954292ca4dd85224182524a0c976d801a14d367464069090555ff8e87c88ce0fb22cb3f398c4d33d2afd0b31190764d6043eccfaee087069f2270544ae3949e115cc708eb8a3454ca92df32927764d42a3bb55a3a33e5dc0e8e3ae517baf83f91a661d00b09414a52cdce7f0e8cc4b3dd35854d5f2d5fa5299a54adc1f43d8a76b98389ff40d335a8294a1d6010e386b64ff7d16918029667e5497022fbc26aa1e941aeff39a87ac210d6cd498d75f14984ecc463dc8c4c90233cca3dcfdd6a1479d82bb2d66a77a35dde28204430b4575b9438a49d4ff02ca538cf313badaab2974f355400b56eb73c9ab66902a547d26731c97e5883c5070edb60bd202d1423ae92cb3fde4583ba12510696124ca2d72cfbb7e766b3baa5b7e30b065ff5af35c787ce3e7bd28e7b3940749ee31aaf3577685527e469c9c9acfe0c7f7802c7d387aded5c896b00e439e319caeed987bf90b8fa0f410558e57fa3b517067a10cc3a0143682ee64b580761c718cc5f764c3db415c3d01d106ac729ed1fa8f833d18661700a6b634ed3ccce7f0a8cc6b3dd35012d5fad7fa42d9250add5751d3b76f983c8555ff8e07e88ca0df22db3f398c4d33d2afd2b71194764d6043e4cfaec087069f0270544be3941e135cc788e3923414ca82973292776cf42a3bb54a3a33e5dc06ce3af51fbaf833918661d00b8b414a52cdce7f0e8cc4b3dd35856d5f2d5fa5699a74adc1f43d0a76f98389f640d33528294a1d6010e386b64f87d16c18029667e5497020ffc76aa1ed41aeff39a85ac250d6cd698d75f1c984bcc463ce8c4c90233cc23dcfdd2a1479982bb2d67a37a35dde2820c430b4574b9438849d4ff02da539cf913badaab2974f355400f56eb73c92b66922a54fd27531c97e5883c5470edb60bd202d1423ae92cb3fde45833a12518696124ca2d72cfbb7e766b3baa5b7e30b065f752f35c787ce3e7bd28f7b3940749ee31aaf35776855a76469cbc9ecfe087d7802efd3878ded5c896b00e439e3114beed987bf93b8fa0f410d58e57f63f517067a10cc3a0141682ee64b5807618f18cc1f764c3db41543f019906ac72bed1fa8f833d1c661d00a6b634e53ccceff0b8cc6b3dd35012d5f8d7fa42d9250a595771d2b56f983c9f740d335a82bca0b6011ca86b6add7d360580a8447a0087020bdd76ae9e949aeefe9a838c250f7cd788d7d654984bdc563d7ea7d98a72cea79cfdd2a94785a2b72d66b33835d5608108432b457cb963d84d14f7025a539dfb11bbcaab2991f765408b77ef77e98a66162b547d86599cb6c1843dd034ecba2ad262d140a8e12df3fff45813242512716104ca2d7ac7b97e766333e85a7e20b075f3de935d7a78f7e7bd78d7bb971609ee31cefbd776855a744699bd9a4fe0c7f7800c5d3c789e99089f300ecf0a71d8b66c987b492b8780f0e097da9f3ca7734f620f0526c9e9c3771558ffcce28e6c43be515ee04c68f995021d0917f85f985ca3fe242221e777bf469716790df5fae51a2eee4d787b351dd3aeef40105978c13fbfa01fe057819c6b917d5327f6d0554f8665418e142c69ed2662e45f761f92d354382cb85f58c51e59867de0b90014d9e9ea01e2305ae2df38a10bfc49e5e1e412d0aea79fea89217249a63cc5c6b3b16a5e64683059d2b1009d3e05cb760e7de5e350bd67e596b7e43278630bb9d2164b3e2e26f1ce59c895bd463577b482cd22675badf2a2e2a713b2c4a42ed1333874cfe64df7ef4e20fcc8183039bd5cc5bbfdab31c933537fe6cc8ed6fb039adaefd0458933398a99513151b1d9460b9951ae3e324f3f6ed72ff640c194ddebc42dde4d59ac59939fdd32606685f298d6d7768a308999cea4ae880e9d8e4b201d81378ca0521fdbaf9ff3e3fa338d65bf91ff1e2e9ccfab281ff69a67fd4c56d54e79aaa93523d8a970e1c050462c5e1e822f4b537b065a985c90363d0a38fd2d6d9d359ed71c6370780bfeb55999c8fdda8e14c064af33f19d4ba4f031ac8a9deb500499c75cf3be996f3a2dd0c196240fc53a070f4fccba99b22e7704c55ff765900e4120e655618fe4d74fc3c9fd9986a14d9cff8b530b775dd407ab5c326f822aeaa608d5549b38ec4e06706329aa96379f413f67b09f932d6c3a485d1ac5187ea6bee89acfef8e5af778b7bca7077c78cc21d56dbb45da1dabcfe2db1e01bdb558fb7df9eb6fca514a2ecc044e0003cfc484b16f4fca434e2ecc544e0003efd584b16d491efd0903d709ce7cc78968e4ae05e1b85dc5fe51482799d92104d102724c44f6554e44206eaeb3d035d6d28244e1c7470d709452dc0914ebb93a96575c25f1a244214eb415abbe442f6a5822651ed7b5745037d9dcf6cd17a1e2260a42f49508248446043cbcb49fad0959a40bf2618d0a7af0632c82f2a17f751cea503670c1837529a666bff8ef06a0294d8f167b2db8571f8e6fa455d88166a5a57979a1af01027105b41ebf4e650d0a859e326e72a55979750b35eb908227b9a6191761fe04b25197808fac244cf691fd71854d2640e919987b683d674"
    /* 866.4339756407926 */   "c2275cd7d2f4c39f810fc68d52242d5cf53197ebd664107ff041f5a29058ae3a1acc08b7ac738d6cf81afd22c7fd0c420c30113f7539deebabc9feab2e7db8ac910d794389246e09a446bad710670d94ff9b1d10f427475ec817a5752344f127bc13d75156e5e388912d82d4927df8806535d6ce923902d87fb63b9cec44ba21ed67faa7775522a1e0630ff5c56a79ab61e44a425954292ca4cd85234182524a04976d801a14d367464469090555ffce87c88ce0fa22cb3b398c4d33d2af90f31190764d6043e4cfaee087279f2270544be3949e115cc708eb8a3454e892df32927564d42a3bb5da3a33e5dc0e8e7ae517b8f82b91a661d00b19414a52cdce7f0e8cc4b3dd35854d5f2d5fa5299a54adc1f43d8a76b88389fd40d335a8294a1d6010e386b65bf7d16918029667e5497032fbc26aa1e941aefb39287ac210d6cd498d7cf34980ecc423dc8ccc90233eca2dcfdd6a1479d82bb2d66a77a35dde08304430b4575b9c38a48d4fd02ca138cf313badabb2974f355404b56eb73c9ab6690aa547d26731c97e588341070edb62bd202d1423ae92cb3fde4583ba12510696124ca2d72cffb7e766b3baa5b7e00b065ff5af35c78fce3e79d28e7b7940749ce318af3577685523e468c9c9acbe0cff780287d385aded5c896b00e539e319caeed987bf90b8fa0f510558e57fa3b517067a10ce3a8143682ee649580761c718cc5d764c3db415c3d09d106ac729ef1fa8f833d18661700a6b634ed3ccce7f0a8cc6b3dd35092d5dad7fa42d9250add5755d3b76e983c8545ff8e07e88ca0df22d73f398c6d33d2ef92b73994764d6043e4cfaec087069f0270544be2941e115cc798e3b63434ca82b73292766cf42a3bb54a3a33e5dc06ce3af51fbaf832918641d80b8b414a52cdde3f0e8cc4b39d35856d5f2d5fa5699a74adc1f43d0a7194764d604364cfbec087469f026054cbe3941e135cc788e3933414e882973292776cf42a3bb54a3a33e5d406ce3af51fbaf033918261f02b8b414a52cdce7b1e8c8433dc35856d5f2d5fa5699a74bdc1f43d8a76f98389f640d33528294a1d6010e384b64f87d16c18029667e5417020ffc76aa16d41aeff39a85ac450d6cd698d75f1c984bcc463ce844c90233cc23dcfdd2a147b983bb2d66a37a35dde2820e432b4574b9438849d4ff02da5394f913badaab2974f355400f56ab73c92b66822a54fd27531c97ed883e5470edb40b9202d1423aa92cb3ffe4583ba12518696124ca2d72cfbb7e766b2baa5b7e30b065f752f35c787ce3af3d28f7b3941749ee31aa735776855a764698bc9e4fe08797802efd3879ded5c896b00e439e3114beed987bf92b8fa0f410d58e57f63e537067a50cc3a0141682ee64b5807618e18c41f364c3db61443d019906ac72bec1fa8e833d1c661d80a6b634e53ccceff0b8cc6b3dd35112d5f897fe42d9210a595771d2b56f983c9f740d335a82bca0b6011ca86b6add7d260580a8047a0087300bdd76ae9e949aeefe9287cc250f7cd788d7d6d4984bdc563d7ea7d98a72cea79cfdd2a94784a2b72d66333835d5608108432b451c25be7ffe8b026484a2462c209964af58f72fcecc667d0f4fc4160ebe7bd26baf4f1efcf7af1af762eac13dc639df7aeed0a34c88d337b349fc18fee0018ba78f13d32113e601d9e14e3b16cd930f692570b01a1c12db536794ee69ed41e084d93d386ee2ab1ff99c51cd8873ca2bdc098d1f32a043a122fe0bf30b947fc484443ceef7e8d2e2c761bebf58a345ddc9af0f66a3ba75dde8860b2f1837f7f403f80ae0338d722faa6cfeda0aa9f0cca871c2878d3da4ce5c8aeec3f25a6a8705970beb18a3cb30cfbc1720029b3d3d403c460b5c5be714217f893cbc3c825a15d4f3fd51242f5934c7d8b8d6762d4bcc8d060b3a566013a7c0b96ec1cfbcbc6a17acfcb2d6fc864f0c61773e42c967c5c4de39cb3912b7a8c6acf69059a44ceb75be545e54e276589485da26670c99fcc9befde9c41f9902060737ab98b77fb5e639266a6ffcd9b1cadf60735b1dfa08b1266731532a262a363b28c1730b35c7ce4be7eddae5fec818329bbd7885bbc9ab35893273fba64c0cd0be531adaeed146113339c495d101d3b1c96403b024f1140a437b75f3fe7e7f4675acb7f23fe3c5d399f56503fad34cffa98adaa9cf355526a47b152e1c380a08c58bc3d045e96a6f60cadb0b9202c7b1471fa4adf3a6b2dae38c6e0f017fd6ab33391fbb51c2980c95e67e33a9749e06359153bd6a009338eb9e77d32de740b21812cc81f8a550e1e1f997533745cae49cabfeecb201c8341ccaac31fc9ae9f8793fb320d429b39ff16a616eebba80f56b864df0455d54c11a8a93671d89c0ce0e653542c6f3e827ecf613f265ad87490fa358a30fdcd7dd1359fdf1cb5eef16f794e0ff8f198c3aadb7e9bb43b579fc5b63c037b6ab1f6fbf3d6df94a2945d98089e20079f890962de9f94869c5d98a89c0005dfab0962d3923dfa1207ae139cf98f12d1c95c0bc370bb8bfca2904f33b64a09a204649889ecaa9c8852dd5d67a06bada50489c38e8e1ae128a5a810299772752cacb84be34480409d682b177c885ed4b044ca3daf6ee8a06fb3b9ed9a2f43c44c1485e92a1049088c087979693f5a12b34817e4c31a14f5e0c65905e542feea39d0a06ce18306ea534cc97ff1de0d60529b3e2cf64b70ae3f1edd48abb102cd4b4ef2f3435e0204e20b683d7e9cca1a050b3c64dce54ab2a2ea166bd723044f734c322ec3fc0964a32f011f584899ed23fae30a9a4481d23330f6d07ade8"
  ).map(hex => BitVector.fromValidHex(hex)).flatMap(bits => fitness(Program.parse(bits)).map(score => ScoredIndividual(bits,score)))
  
  //val startingPop = bestYet.map(best => List.fill(100)(best))
  val startingPop: IO[List[ScoredIndividual[Double]]] = List.range(0,100).parTraverse{ i => 
    for {
      size <- randomIO.flatMap(_.betweenInt(5,100))
      bits <- randomIO.flatMap(_.nextBytes(size)).map(BitVector(_))
      indiv <- IO(Program.parse(bits))
      score <- fitness(indiv)
    } yield ScoredIndividual(bits,score)
  }.flatMap(xs => bestYet.map(_ :: xs.tail))
  
  val refTheBest = Ref.of[IO,ScoredIndividual[Double]](ScoredIndividual(BitVector.empty,0.0))
  val tolerance = math.pow(10,-14)
  def onBest(si: ScoredIndividual[Double]): IO[Unit] = for {
    ref <- refTheBest
    current <- ref.get
    _ <- if((si.score - maxPossibleScore).abs <= tolerance) 
            ref.set(si) 
              >> IO.println(s"!!!!!!!!!!!!! TARGET ACHIEVED   !!!!!! $si") 
                >> IO.raiseError(new RuntimeException("TARGET ACHIEVED!!!"))
          else 
            IO.unit
  } yield ()

  // evolve n generations
  def evolve( n: Int, 
              numParallel: Int, 
              printEvery: Int = 10, 
              maxTarget: Option[Double] = None,
              updateBest: ScoredIndividual[Double] => IO[Unit] = si => IO.unit)
              (implicit ord: cats.kernel.Order[Double], ring: spire.algebra.Ring[Double], randbetween: RandBetween[Double])
              :IO[List[ScoredIndividual[Double]]] = for { 
      rand <- randomIO
      pop <- startingPop
      evolvedPop <- Evolver.evolveN(fitness)(pop,n,numParallel, printEvery,maxTarget,updateBest)(Program.geneticJoyBool,rand,ord,ring,randbetween)
  } yield evolvedPop

  def test(candidate: Program, numTests:Int = numTestCases): IO[Unit] = for {
    cases <- generateTestCases(numTests)
    output <- cases.traverse(testcase => for {
        _ <- IO.println("-----")
        _ <- IO.println(testcase.initialState)
        _ <- IO.println(testcase.expectedFinalState)
        output <- candidate(testcase.initialState)
        _ <- IO.println(output)
        _ <- IO.println("-----")
      } yield ()      
    )

  } yield ()

  def fx(candidate: Program): Int => Int => IO[Int] = lhs => rhs => {
    val psi = ProgramState().copy(input = BitVector.fromInt(lhs) ++ BitVector.fromInt(rhs))
    candidate(psi).map(_.output.toInt())
  }

  //override protected def blockedThreadDetectionEnabled = true
  def run: IO[Unit] = evolve(100000,numParallel = 1, printEvery = 20, maxTarget = Some(maxPossibleScore), updateBest = onBest).as(())

  def hamming(lhs: Int, rhs: Int): Int = java.lang.Integer.bitCount(lhs ^ rhs)
  extension(i: Int)
    def bitCount: Int = java.lang.Integer.bitCount(i)